[{"id":0,"title":"Setting up a Local Java Development Environment","url":"/java","body":"Setting up a Local Java Development Environment\n\nMultiple courses at GRCC require a working knowledge of Java, or (in the case of CIS-117 and CIS-217) teach the concepts of programming \nusing the Java programming language. For the most part, you’ll probably be using zyBooks as a \nlearning platform, and zyBooks provides a browser-based IDE within which you will complete your coursework.\n\nIt can be useful at times, either for troubleshooting unexpected results from zyBooks or just to experiment outside of the \nlearning platform, to have the ability to write and execute Java code on your local computer. To that end, we’ll walk you through a few options \nfor installing Java and tools for creating Java projects.\n\nInstall a Java Development Kit (JDK)\n\n\n     Always install the JDK first. Install additional tools (like VS Code or IntelliJ) afterwards.\n\n\nJava is a “compiled” language, in that it needs to be converted into something called “bytecode” in order to produce an executable program. To compile Java, \nyou will need a Java Development Kit, or JDK. At the moment, there are two major options for acquiring a JDK: Oracle JDK \nand OpenJDK.\n\nInstall Oracle JDK\n\nMost of the time, you’ll install the official JDK from Oracle. Visit the link above, and then scroll down until you see the section labeled \nJava SE Development Kit XX.X.X downloads (where XX.X.X is the current JDK release version). Click the tab matching your operating system, and then \nchoose an installer. For this article, we’re downloading the x64 Installer for Windows:\n\n\n\nOnce the download has completed, launch the installer:\n\n\n\nThe default options are safe to use, so continue clicking Next until the installer begins to install the JDK. Once the installer completes, you will \nhave access to tools for compiling Java code. The installer also installed a Java Runtime Environment, or JRE, which is required for executing your \ncompiled Java code, so (technically) you don’t need anything else.\n\nWe’d recommend also installing one or more of the IDEs listed below, as they provide a range of additional tools to make developing in Java much easier.\n\nFor a simple example program you can run, to verify that the JDK is installed correctly, see Java Examples - ‘Hello World’.\n\nInstall (or Extend) Visual Studio Code\n\nVisual Studio Code (also known as VS Code) is a multi-platform code editor and development environment. It comes with native support for multiple programming \nlanguages, and has an extensive ecosystem of free or paid extensions to add support for additional languages or frameworks. To that end, it makes a great tool for \nlearning Java.\n\nIf you do not have VS Code installed, you can visit https://code.visualstudio.com/ to download the appropriate version for your \noperating system:\n\n\n\nOnce the download has completed, launch the installer. Accept the Terms of Service, and then click Next to bring up the installation options:\n\n\n\nThe default options are safe to use, so click Next until the installer begins to install VS Code. This will take a few minutes, so please be patient. Once the \ninstaller has completed, click Finish.\n\nNext, download the Java extension by visiting https://marketplace.visualstudio.com/items?itemName=Oracle.oracle-java:\n\n\n\nOnce the download has completed, launch the installer:\n\n\n\nThis will open the extension in VS Code - click the Install button to install the extension into VS Code. You may be prompted to restart VS Code, after which the \nextension will be active. There’s a few steps left before you can actively debug Java in VS Code - follow the Getting Started guide on the extension’s page to finish \nyour setup.\n\nInstall IntelliJ\n\nAnother great option for developing in Java is IntelliJ, an integrated development environment, or IDE, from JetBrains. IntelliJ is an IDE focused on Java and Java-based frameworks, and is probably the best choice for complex projects.\n\nIntelliJ has both a Pro (paid) version, and a Community (free) edition. We’d recommend the Community Edition. Visit https://www.jetbrains.com/idea/download and then scroll down until you see IntelliJ IDEA Community Edition:\n\n\n\nOnce the download has completed, launch the installer:\n\n\n\nThe default options are safe to use, so click Next until the installer begins to install IntelliJ. This will take a few minutes, so please be patient. Once the \ninstaller has completed, click Finish (choose Reboot now if you want to immediately restart your computer).\n\nInstall Eclipse IDE\n\nEclipse is probably one of the oldest continually-maintained IDEs available for Java development, but don’t hold that against it - it’s a fully modern IDE and is an \nexcellent choice as both a learning tool and something you can (and probably will) continue to use as a professional Java developer.\n\nVisit https://www.eclipse.org/downloads/packages/ to download Eclipse:\n\n\n\nOnce the download has completed, launch the installer:\n\n\n\nFrom the list, select Eclipse IDE for Java Developers. The default options are safe to use, so click Install. This will take a few minutes, so please be patient. Once the \ninstaller has completed, click Launch.\n\nWhen starting up, Eclipse will prompt for a workspace:\n\n\n\nA workspace is basically a virtual desk for Java development - whatever settings you configure in Eclipse are saved to this workspace and applied each time the \nworkspace is selected. This lets you configure multiple workspaces, according to the needs of the tasks on which you are working.\n\nOnce a workspace is selected, you’ll be in the Eclipse version of a start page:\n\n\n\nThe Wrap Up\n\nThat’s it! You now have up to four new tools with which to experiment. Have fun!"},{"id":1,"title":"Setting up Python for Local Development","url":"/python","body":"Setting up Python for Local Development\n\nMultiple courses at GRCC require a working knowledge of Python, or (in the case of CIS-116) teach the concepts of programming \nusing the Python programming language. For the most part, you’ll probably be using zyBooks as a \nlearning platform, and zyBooks provides a browser-based IDE within which you will complete your coursework.\n\nIt can be useful at times, either for troubleshooting unexpected results from zyBooks or just to experiment outside of the \nlearning platform, to have the ability to write and execute Python code on your local computer. To that end, we’ll walk you through a few options \nfor installing Python and tools for creating Python projects.\n\nInstall Python and IDLE\n\n\n     Always install Python first. Install additional tools (like VS Code or PyCharm) afterwards.\n\n\nYou can install Python by visiting https://www.python.org/downloads/. The website should automatically detect \nyour operating system and offer the correct version to install:\n\n\n\nOnce the download has completed, launch the installer:\n\n\n\nThe default options are safe to use, so we’d recommend choosing Install Now. Windows users will likely benefit from also checking the Add python.exe to PATH \noption at the bottom of the dialog, but it’s not strictly required.\n\nOnce the installer completes, you will be able to execute Python files locally. You’ll also have access to the native Python code editor, called IDLE:\n\n\n\nFor a simple example program you can run, to verify that Python is installed correctly, see Python Examples - ‘Hello World’.\n\nInstall (or Extend) Visual Studio Code\n\nVisual Studio Code (also known as VS Code) is a multi-platform code editor and development environment. It comes with native support for multiple programming \nlanguages, and has an extensive ecosystem of free or paid extensions to add support for additional languages or frameworks. To that end, it makes a great tool for \nlearning Python.\n\nIf you do not have VS Code installed, you can visit https://code.visualstudio.com/ to download the appropriate version for your \noperating system:\n\n\n\nOnce the download has completed, launch the installer. Accept the Terms of Service, and then click Next to bring up the installation options:\n\n\n\nThe default options are safe to use, so click Next until the installer begins to install VS Code. This will take a few minutes, so please be patient. Once the \ninstaller has completed, click Finish.\n\nNext, download the Python extension by visiting https://marketplace.visualstudio.com/items?itemName=ms-python.python:\n\n\n\nOnce the download has completed, launch the installer:\n\n\n\nThis will open the extension in VS Code - click the Install button to install the extension into VS Code. You may be prompted to restart VS Code, after which the \nextension will be active.\n\nInstall Pycharm\n\nAnother great option for developing in Python is PyCharm, an integrated development environment, or IDE, from JetBrains. PyCharm is an IDE focused on Python and Python-based frameworks, and is probably the best choice for complex projects.\n\nPyCharm has both a Pro (paid) version, and a Community (free) edition. Previously, these were separate downloads, but as of 2025, you can simply download one installer \nby visiting https://www.jetbrains.com/pycharm/download:\n\n\n\nOnce the download has completed, launch the installer:\n\n\n\nThe default options are safe to use, so click Next until the installer begins to install PyCharm. This will take a few minutes, so please be patient. Once the \ninstaller has completed, click Finish.\n\nThe Wrap Up\n\nThat’s it! You now have up to three new tools with which to experiment. Have fun!"}]
